<!DOCTYPE html>
<html lang=<%=typeof language == 'undefined' ? 'en' : language %> >
  <head>
    <title><%=typeof title == 'undefined' ? 'Going green' : title %></title>
    <!-- come form bootstrap -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5">


    <!-- Name of web application (only should be used if the website is used as an app) -->
    <meta name="application-name" content="Planning Green Changes">

    <!-- Short description of the document (limit to 150 characters) -->
    <!-- In *some* situations this description is used as a part of the snippet shown in the search results. -->
    <meta name="description" content="Planning Green Changes - an application to help exploring various possibilities (raising chicken, solar panels, saving water, grow your own food, so you get a better idea of what to expect, and decide if these changes are worth doing">

    <link rel="icon" href="favicon.ico">

    <!-- Bootstrap -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <!--link href="bootstrap/css/ie10-viewport-bug-workaround.css" rel="stylesheet"-->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!--
    Stylesheets and Preprocessors
    ==============================
    By default, stylesheets from your `assets/styles` folder are included
    here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
    are supported. In production, your styles will be minified and concatenated into
    a single file.
    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:
        + Change the order of your CSS files
        + Import stylesheets from other directories
        + Use a different or additional preprocessor, like SASS, SCSS or Stylus
-->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/index.css">
    <!--STYLES END-->

   <!-- choice of colour depending on the settings -->

  <%  if (settings.selectedTheme == 'plain') { %>
          <link rel="stylesheet" href="plain.css">
          <% } else { %> 
                    <%  if (settings.selectedTheme == 'blue') { %>
                          <link rel="stylesheet" href="blue.css">
                          <% } else { %> 
                                    <link rel="stylesheet" href="default.css">
                                  <% } %>
                    <% } %>
  </head>

<% if (typeof title !== undefined && title == 'Home') { %>
  <body onload="updateIndexView()">
   <% } else { %> 
   <body>
          <% } %>
      <% if (!settings.noCookieNotice) { // if the user never closed the cookie notice before then display it %>
      <div class="row">
        <div id="cookienotice"><%= __('This site uses cookies') %>
                              <a href="cookies" id="cookiepolicylink" title="see-cookie-policy" target="_top"><%= __('Learn more') %></a> 
                              <a class="btn button-primary btn-md cookienoticebutton" role="button" onclick="cookieNoticeClose();" title="Do not show this message"><%= __('Close')%></a>
        </div>
      </div>
      <% } %>
      <!-- if javascript is disabled the app won't work, - this is a warning for the user -->
      <noscript>
        <div class="alert alert-danger text-center" role="alert"><strong><%= __("WARNING! ") %></strong><%= __("Javascript is disabled. Without javascript the website won't work properly. Sorry!") %></div>
      </noscript>

      <%- body %>

    <%- include /partials/footer %>

    <!--
        Client-side Templates
        ========================

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/myJavascript.js"></script>
    <!--SCRIPTS END-->
    <!-- Bootstrap core JavaScript
  ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="bootstrap/js/bootstrap.min.js"></script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    <!--script src="bootstrap/js/ie10-viewport-bug-workaround.js"></scrip--t>

  </body>
</html>
